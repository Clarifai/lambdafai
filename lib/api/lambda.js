var strings = require('../internal/strings');

var Lambda = function(app, opts) {
  strings.checkIdentifier(opts.name, 'lambda name');
  this.name = opts.name;
  this.description = opts.description || (opts.name + ' (generated by Lambdafai)');
  this.ram = opts.ram || 128;
  this.timeout = opts.timeout || 10;
  this.routes = [];
};

Lambda.prototype.get = function(path, handler) {
  this.routes.push({method: 'GET', path: path, handler: handler });
}

Lambda.prototype.post = function(path, handler) {
  this.routes.push({method: 'POST', path: path, handler: handler });
}

Lambda.prototype.put = function(path, handler) {
  this.routes.push({method: 'PUT', path: path, handler: handler });
}

Lambda.prototype.head = function(path, handler) {
  this.routes.push({method: 'HEAD', path: path, handler: handler });
}

Lambda.prototype.delete = function(path, handler) {
  this.routes.push({method: 'DELETE', path: path, handler: handler });
}

Lambda.prototype.options = function(path, handler) {
  this.routes.push({method: 'OPTIONS', path: path, handler: handler });
}

Lambda.prototype.findHandler = function(method, path) {
  for (var i = 0; i < this.routes.length; i++) {
    var route = this.routes[i];
    if (route.method == method && route.path == path) {
      return route.handler;
    }
  }
}

module.exports = Lambda;
